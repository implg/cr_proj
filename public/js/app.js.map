{"version":3,"sources":["common.js","company.js","splitter.js","users.js","datatables/buttons.server-side.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChlTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["$(document).ready(function() {\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        }\n    });\n    $.datetimepicker.setLocale('ru');\n    $('.datetimepicker').datetimepicker();\n\n    $('.datetimepicker2').datetimepicker({\n        format:'Y-m-d H:i:s'\n    });\n\n    $.material.init();\n\n    $('.tooltip').tooltip();\n});","$(document).ready(function() {\n    $('#split').split({\n        orientation: 'horizontal',\n        limit: 10,\n    });\n\n\n    //clear modal form for event editing\n    $('body').on('click', '.event_edit', function (e) {\n        var eventId = $(this).data('event-id');\n\n        $.get('/events/' + eventId + '/edit', function (data) {\n            $('.update_modal_event .modal-content').html(data);\n            $('.update_modal_event').modal('show');\n            $.material.init();\n            setTimeout(function() {\n                $('.datetimepicker3').datetimepicker();\n                $('.datetimepicker3').datetimepicker('show');\n                setTimeout(function() {\n                    $('.datetimepicker3').datetimepicker('hide');\n                },100)\n            },700)\n        })\n    });\n\n    // Update event\n    $('body').on('submit', '.events_update', function (e) {\n        e.preventDefault();\n        var event_id = $(this).find('input[type=submit]').data('event-id'),\n            responsible_id = $(this).find('.responsible_id').val(),\n            company_id = $('.add_event').data('company-id'),\n            type = $(this).find('.event_type').val(),\n            text = $(this).find('.event_text').val(),\n            taskComplete = $(this).find('.taskComplete').val(),\n            date = $(this).find('.event_date').val(),\n            status = $(this).find('.event_status').val(),\n            reminder = $('.event_reminder').prop('checked') ? 1 : 0;\n        $.ajax({\n            url: '/events/' + event_id,\n            type: 'put',\n            data: {\n                'responsible_id': responsible_id,\n                'company_id': company_id,\n                'type': type,\n                'text': text,\n                'taskComplete': taskComplete,\n                'date': date,\n                'reminder': reminder,\n                'status': status\n            },\n            success: function (data) {\n                $('.update_modal_event').modal('hide');\n                // Get events for company\n                if(company_id) {\n                    $.ajax({\n                        url: 'events-company/' + company_id,\n                        type: 'get',\n                        data: {\n                            'companyId': company_id\n                        },\n                        success: function (data) {\n                            $('#events').html(data);\n                        }\n                    });\n                } else {\n                    window.location.reload();\n                }\n            }\n        });\n    });\n\n    // Delete event\n    $('body').on('click', '.event-destroy', function () {\n        var eventId = $(this).data('event-id');\n        var tr = $(this).closest('tr');\n\n        $.confirm({\n            title: 'Удалить предприятие',\n            theme: 'black',\n            confirmButton: 'Удалить',\n            cancelButton: 'Отмена',\n            content: 'Вы уверены, что хотите удалить это событие?<br>Эта операция не восстановима.',\n            confirm: function () {\n                $.ajax({\n                    url: 'events/' + eventId,\n                    type: 'delete',\n                    success: function (data) {\n                        tr.fadeOut(400, function () {\n                            tr.remove();\n                        });\n                    }\n                });\n            }\n        });\n\n    });\n\n    // Tasks\n\n    $(document).on('change', '.change_task #status', function() {\n        var status = $(this).val();\n        if(status == 2) {\n            $('.comment-task-complete').slideDown();\n        }\n    });\n\n});","/*!\n * JQuery Spliter Plugin version 0.20.1\n * Copyright (C) 2010-2016 Jakub Jankiewicz <http://jcubic.pl>\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n(function($, undefined) {\n    var count = 0;\n    var splitter_id = null;\n    var splitters = [];\n    var current_splitter = null;\n    $.fn.split = function(options) {\n        var data = this.data('splitter');\n        if (data) {\n            return data;\n        }\n        var panel_1;\n        var panel_2;\n        var settings = $.extend({\n            limit: 100,\n            orientation: 'horizontal',\n            position: '50%',\n            invisible: false,\n            onDragStart: $.noop,\n            onDragEnd: $.noop,\n            onDrag: $.noop\n        }, options || {});\n        this.settings = settings;\n        var cls;\n        var children = this.children();\n        if (settings.orientation == 'vertical') {\n            panel_1 = children.first().addClass('left_panel');\n            panel_2 = panel_1.next().addClass('right_panel');\n            cls = 'vsplitter';\n        } else if (settings.orientation == 'horizontal') {\n            panel_1 = children.first().addClass('top_panel');\n            panel_2 = panel_1.next().addClass('bottom_panel');\n            cls = 'hsplitter';\n        }\n        if (settings.invisible) {\n            cls += ' splitter-invisible';\n        }\n        var width = this.width();\n        var height = this.height();\n        var id = count++;\n        this.addClass('splitter_panel');\n        var splitter = $('<div/>').addClass(cls).bind('mouseenter touchstart', function() {\n            splitter_id = id;\n        }).bind('mouseleave touchend', function() {\n            splitter_id = null;\n        }).insertAfter(panel_1);\n        var position;\n\n        function get_position(position) {\n            if (typeof position === 'number') {\n                return position;\n            } else if (typeof position === 'string') {\n                var match = position.match(/^([0-9\\.]+)(px|%)$/);\n                if (match) {\n                    if (match[2] == 'px') {\n                        return +match[1];\n                    } else {\n                        if (settings.orientation == 'vertical') {\n                            return (width * +match[1]) / 100;\n                        } else if (settings.orientation == 'horizontal') {\n                            return (height * +match[1]) / 100;\n                        }\n                    }\n                } else {\n                    //throw position + ' is invalid value';\n                }\n            } else {\n                //throw 'position have invalid type';\n            }\n        }\n\n        var self = $.extend(this, {\n            refresh: function() {\n                var new_width = this.width();\n                var new_height = this.height();\n                if (width != new_width || height != new_height) {\n                    width = this.width();\n                    height = this.height();\n                    self.position(position);\n                }\n            },\n            position: (function() {\n                if (settings.orientation == 'vertical') {\n                    return function(n, silent) {\n                        if (n === undefined) {\n                            return position;\n                        } else {\n                            position = get_position(n);\n                            var sw = splitter.width();\n                            var sw2 = sw/2, pw;\n                            if (settings.invisible) {\n                                pw = panel_1.width(position).outerWidth();\n                                panel_2.width(self.width()-pw);\n                                splitter.css('left', pw-sw2);\n                            } else {\n                                pw = panel_1.width(position-sw2).outerWidth();\n                                panel_2.width(self.width()-pw-sw);\n                                splitter.css('left', pw);\n                            }\n                        }\n                        if (!silent) {\n                            self.trigger('splitter.resize');\n                            self.find('.splitter_panel').trigger('splitter.resize');\n                        }\n                        return self;\n                    };\n                } else if (settings.orientation == 'horizontal') {\n                    return function(n, silent) {\n                        if (n === undefined) {\n                            return position;\n                        } else {\n                            position = get_position(n);\n                            var sw = splitter.height();\n                            var sw2 = sw/2, pw;\n                            if (settings.invisible) {\n                                pw = panel_1.height(position).outerHeight();\n                                panel_2.height(self.height()-pw);\n                                splitter.css('top', pw-sw2);\n                            } else {\n                                pw = panel_1.height(position-sw2).outerHeight();\n                                panel_2.height(self.height()-pw-sw);\n                                splitter.css('top', pw);\n                            }\n                        }\n                        if (!silent) {\n                            self.trigger('splitter.resize');\n                            self.find('.splitter_panel').trigger('splitter.resize');\n                        }\n                        return self;\n                    };\n                } else {\n                    return $.noop;\n                }\n            })(),\n            orientation: settings.orientation,\n            limit: settings.limit,\n            isActive: function() {\n                return splitter_id === id;\n            },\n            destroy: function() {\n                self.removeClass('splitter_panel');\n                splitter.unbind('mouseenter');\n                splitter.unbind('mouseleave');\n                splitter.unbind('touchstart');\n                splitter.unbind('touchmove');\n                splitter.unbind('touchend');\n                splitter.unbind('touchleave');\n                splitter.unbind('touchcancel');\n                if (settings.orientation == 'vertical') {\n                    panel_1.removeClass('left_panel');\n                    panel_2.removeClass('right_panel');\n                } else if (settings.orientation == 'horizontal') {\n                    panel_1.removeClass('top_panel');\n                    panel_2.removeClass('bottom_panel');\n                }\n                self.unbind('splitter.resize');\n                self.trigger('splitter.resize');\n                self.find('.splitter_panel').trigger('splitter.resize');\n                splitters[i] = null;\n                count--;\n                splitter.remove();\n                self.removeData('splitter');\n                var not_null = false;\n                for (var i=splitters.length; i--;) {\n                    if (splitters[i] !== null) {\n                        not_null = true;\n                        break;\n                    }\n                }\n                //remove document events when no splitters\n                if (!not_null) {\n                    $(document.documentElement).unbind('.splitter');\n                    $(window).unbind('resize.splitter');\n                    splitters = [];\n                    count = 0;\n                }\n            }\n        });\n        self.bind('splitter.resize', function(e) {\n            var pos = self.position();\n            if (self.orientation == 'vertical' &&\n                pos > self.width()) {\n                pos = self.width() - self.limit-1;\n            } else if (self.orientation == 'horizontal' &&\n                pos > self.height()) {\n                pos = self.height() - self.limit-1;\n            }\n            if (pos < self.limit) {\n                pos = self.limit + 1;\n            }\n            e.stopPropagation();\n            self.position(pos, true);\n        });\n        //inital position of splitter\n        var pos;\n        if (settings.orientation == 'vertical') {\n            if (pos > width-settings.limit) {\n                pos = width-settings.limit;\n            } else {\n                pos = get_position(settings.position);\n            }\n        } else if (settings.orientation == 'horizontal') {\n            //position = height/2;\n            if (pos > height-settings.limit) {\n                pos = height-settings.limit;\n            } else {\n                pos = get_position(settings.position);\n            }\n        }\n        if (pos < settings.limit) {\n            pos = settings.limit;\n        }\n        self.position(pos, true);\n        if (splitters.length === 0) { // first time bind events to document\n            $(window).bind('resize.splitter', function() {\n                $.each(splitters, function(i, splitter) {\n                    if (splitter) {\n                        splitter.refresh();\n                    }\n                });\n            });\n            $(document.documentElement).on('mousedown.splitter touchstart.splitter', function(e) {\n                if (splitter_id !== null) {\n                    current_splitter = splitters[splitter_id];\n                    setTimeout(function() {\n                        $('<div class=\"splitterMask\"></div>').\n                        css('cursor', current_splitter.children().eq(1).css('cursor')).\n                        insertAfter(current_splitter);\n                    });\n                    current_splitter.settings.onDragStart(e);\n                }\n            }).bind('mouseup.splitter touchend.splitter touchleave.splitter touchcancel.splitter', function(e) {\n                if (current_splitter) {\n                    setTimeout(function() {\n                        $('.splitterMask').remove();\n                    });\n                    current_splitter.settings.onDragEnd(e);\n                    current_splitter = null;\n                }\n            }).bind('mousemove.splitter touchmove.splitter', function(e) {\n                if (current_splitter !== null) {\n                    var limit = current_splitter.limit;\n                    var offset = current_splitter.offset();\n                    if (current_splitter.orientation == 'vertical') {\n                        var pageX = e.pageX;\n                        if(e.originalEvent && e.originalEvent.changedTouches){\n                            pageX = e.originalEvent.changedTouches[0].pageX;\n                        }\n                        var x = pageX - offset.left;\n                        if (x <= current_splitter.limit) {\n                            x = current_splitter.limit + 1;\n                        } else if (x >= current_splitter.width() - limit) {\n                            x = current_splitter.width() - limit - 1;\n                        }\n                        if (x > current_splitter.limit &&\n                            x < current_splitter.width()-limit) {\n                            current_splitter.position(x, true);\n                            current_splitter.trigger('splitter.resize');\n                            current_splitter.find('.splitter_panel').\n                            trigger('splitter.resize');\n                            //e.preventDefault();\n                        }\n                    } else if (current_splitter.orientation == 'horizontal') {\n                        var pageY = e.pageY;\n                        if(e.originalEvent && e.originalEvent.changedTouches){\n                            pageY = e.originalEvent.changedTouches[0].pageY;\n                        }\n                        var y = pageY-offset.top;\n                        if (y <= current_splitter.limit) {\n                            y = current_splitter.limit + 1;\n                        } else if (y >= current_splitter.height() - limit) {\n                            y = current_splitter.height() - limit - 1;\n                        }\n                        if (y > current_splitter.limit &&\n                            y < current_splitter.height()-limit) {\n                            current_splitter.position(y, true);\n                            current_splitter.trigger('splitter.resize');\n                            current_splitter.find('.splitter_panel').\n                            trigger('splitter.resize');\n                            //e.preventDefault();\n                        }\n                    }\n                    current_splitter.settings.onDrag(e);\n                }\n            });//*/\n        }\n        splitters[id] = self;\n        self.data('splitter', self);\n        return self;\n    };\n})(jQuery);","(function () {\n\n    if(!$('.full-access').prop('checked')) {\n        $('.not-full-access').show();\n    }\n\n    $('.full-access').on('click', function() {\n        if(!$('.full-access').prop('checked')) {\n            $('.not-full-access').show();\n        } else {\n            $('.not-full-access').hide();\n        }\n    });\n\n})();","(function ($, DataTable) {\n    \"use strict\";\n\n    var _buildUrl = function(dt, action) {\n        var url = dt.ajax.url() || '';\n        var params = dt.ajax.params();\n        params.action = action;\n\n        return url + '?' + $.param(params);\n    };\n\n    DataTable.ext.buttons.excel = {\n        className: 'buttons-excel',\n\n        text: function (dt) {\n            return '<i class=\"fa fa-file-excel-o\"></i> ' + dt.i18n('buttons.excel', 'Excel');\n        },\n\n        action: function (e, dt, button, config) {\n            var url = _buildUrl(dt, 'excel');\n            window.location = url;\n        }\n    };\n\n    DataTable.ext.buttons.csv = {\n        className: 'buttons-csv',\n\n        text: function (dt) {\n            return '<i class=\"fa fa-file-excel-o\"></i> ' + dt.i18n('buttons.csv', 'CSV');\n        },\n\n        action: function (e, dt, button, config) {\n            var url = _buildUrl(dt, 'csv');\n            window.location = url;\n        }\n    };\n\n    DataTable.ext.buttons.pdf = {\n        className: 'buttons-pdf',\n\n        text: function (dt) {\n            return '<i class=\"fa fa-file-pdf-o\"></i> ' + dt.i18n('buttons.pdf', 'PDF');\n        },\n\n        action: function (e, dt, button, config) {\n            var url = _buildUrl(dt, 'pdf');\n            window.location = url;\n        }\n    };\n\n    DataTable.ext.buttons.print = {\n        className: 'buttons-print',\n\n        text: function (dt) {\n            return  '<i class=\"fa fa-print\"></i> ' + dt.i18n('buttons.print', 'Print');\n        },\n\n        action: function (e, dt, button, config) {\n            var url = _buildUrl(dt, 'print');\n            window.location = url;\n        }\n    };\n\n    DataTable.ext.buttons.reset = {\n        className: 'buttons-reset',\n\n        text: function (dt) {\n            return '<i class=\"fa fa-undo\"></i> ' + dt.i18n('buttons.reset', 'Reset');\n        },\n\n        action: function (e, dt, button, config) {\n            dt.search('').draw();\n        }\n    };\n\n    DataTable.ext.buttons.reload = {\n        className: 'buttons-reload',\n\n        text: function (dt) {\n            return '<i class=\"fa fa-refresh\"></i> ' + dt.i18n('buttons.reload', 'Reload');\n        },\n\n        action: function (e, dt, button, config) {\n            dt.draw(false);\n        }\n    };\n\n    DataTable.ext.buttons.create = {\n        className: 'buttons-create',\n\n        text: function (dt) {\n            return '<i class=\"fa fa-plus\"></i> ' + dt.i18n('buttons.create', 'Create');\n        },\n\n        action: function (e, dt, button, config) {\n            window.location = window.location.href.replace(/\\/+$/, \"\") + '/create';\n        }\n    };\n})(jQuery, jQuery.fn.dataTable);\n"],"sourceRoot":"/source/"}